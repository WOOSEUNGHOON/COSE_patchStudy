7875855005648fba7b39371a70816afae2e07daf
shopware@@shopware
diff --git a/.phpstan-baseline.neon b/.phpstan-baseline.neon
index d0b0ffec176..40220da8ec3 100644
--- a/.phpstan-baseline.neon
+++ b/.phpstan-baseline.neon
@@ -31345,16 +31345,6 @@ parameters:
 			count: 1
 			path: engine/Shopware/Core/sMarketing.php
 
-		-
-			message: "#^Method sMarketing\\:\\:sMailCampaignsGetDetail\\(\\) has no return type specified\\.$#"
-			count: 1
-			path: engine/Shopware/Core/sMarketing.php
-
-		-
-			message: "#^Method sMarketing\\:\\:sMailCampaignsGetDetail\\(\\) has parameter \\$id with no type specified\\.$#"
-			count: 1
-			path: engine/Shopware/Core/sMarketing.php
-
 		-
 			message: "#^Parameter \\#3 \\$subject of function preg_replace expects array\\|string, string\\|null given\\.$#"
 			count: 2
diff --git a/.phpstan.neon b/.phpstan.neon
index 7e98dc5ce6a..44f553e529d 100644
--- a/.phpstan.neon
+++ b/.phpstan.neon
@@ -179,6 +179,8 @@ parameters:
         # This is a bleeding edge feature and not working well since now. See https://github.com/phpstan/phpstan-doctrine/issues/332
         - '#Parameter .* of method Doctrine\\ORM\\.*::.*\(\) expects .*literal-string.* given#'
 
-        - # Doctrine type is integer. PHPStan allows only specific values
-            message: '#Property Shopware\\Models\\Dispatch\\Dispatch::\$.* type mapping mismatch: database can contain int but property expects 0\|1\|2\|3#'
-            path: engine/Shopware/Models/Dispatch/Dispatch.php
+        - # Doctrine type is integer|string. PHPStan allows only specific values
+            message: '#Property Shopware\\Models\\.*\\.*::\$.* type mapping mismatch: database can contain (int|string) but property expects .*#'
+            paths:
+                 - engine/Shopware/Models/Dispatch/Dispatch.php
+                 - engine/Shopware/Models/Newsletter/Container.php
diff --git a/engine/Shopware/Controllers/Backend/Newsletter.php b/engine/Shopware/Controllers/Backend/Newsletter.php
index 7ab57f6ad44..af3ae6d0878 100644
--- a/engine/Shopware/Controllers/Backend/Newsletter.php
+++ b/engine/Shopware/Controllers/Backend/Newsletter.php
@@ -29,6 +29,7 @@
 use Shopware\Components\Routing\RouterInterface;
 use Shopware\Components\ShopRegistrationServiceInterface;
 use Shopware\Components\Validator\EmailValidator;
+use Shopware\Models\Newsletter\Container;
 use Shopware\Models\Plugin\Plugin;
 use Shopware\Models\Shop\Shop;
 use Symfony\Component\HttpFoundation\Response;
@@ -508,15 +509,18 @@ public function getMailingDetails($id)
         trigger_error(sprintf('%s:%s is deprecated since Shopware 5.6 and will be private with 5.8.', __CLASS__, __METHOD__), E_USER_DEPRECATED);
 
         $details = Shopware()->Modules()->Marketing()->sMailCampaignsGetDetail((int) $id);
+        if (!\is_array($details)) {
+            return [];
+        }
 
         foreach ($details['containers'] as $key => $container) {
-            if ($container['type'] === 'ctVoucher') {
+            if ($container['type'] === Container::TYPE_VOUCHER) {
                 if (!empty($container['value'])) {
                     $details['voucher'] = $container['value'];
                 }
-                $details['containers'][$key]['type'] = 'ctText';
+                $details['containers'][$key]['type'] = Container::TYPE_TEXT;
             }
-            if ($container['type'] === 'ctSuggest') {
+            if ($container['type'] === Container::TYPE_SUGGEST) {
                 $details['suggest'] = true;
             }
         }
@@ -551,7 +555,7 @@ public function getMailingVoucher($id)
         trigger_error(sprintf('%s:%s is deprecated since Shopware 5.6 and will be private with 5.8.', __CLASS__, __METHOD__), E_USER_DEPRECATED);
 
         $sql = 'SELECT value FROM s_campaigns_containers WHERE type=? AND promotionID=?';
-        $voucherID = Shopware()->Db()->fetchOne($sql, ['ctVoucher', $id]);
+        $voucherID = Shopware()->Db()->fetchOne($sql, [Container::TYPE_VOUCHER, $id]);
         if (empty($voucherID)) {
             return false;
         }
diff --git a/engine/Shopware/Core/sMarketing.php b/engine/Shopware/Core/sMarketing.php
index 2de77e5ccb2..238d799bbc6 100644
--- a/engine/Shopware/Core/sMarketing.php
+++ b/engine/Shopware/Core/sMarketing.php
@@ -33,6 +33,7 @@
 use Shopware\Components\Compatibility\LegacyStructConverter;
 use Shopware\Models\Banner\Banner;
 use Shopware\Models\Category\Category;
+use Shopware\Models\Newsletter\Container;
 use Shopware\Models\Tracking\Banner as TrackingBanner;
 
 /**
@@ -631,6 +632,11 @@ public function sGetSimilarArticles($articleId = null, $limit = null)
         return $similarProducts;
     }
 
+    /**
+     * @param int $id
+     *
+     * @return array|false
+     */
     public function sMailCampaignsGetDetail($id)
     {
         $sql = "
@@ -662,7 +668,7 @@ public function sMailCampaignsGetDetail($id)
 
         foreach ($getCampaignContainers as $campaignKey => $campaignValue) {
             switch ($campaignValue['type']) {
-                case 'ctBanner':
+                case Container::TYPE_BANNER:
                     // Query Banner
                     $getBanner = $this->db->fetchRow("
                         SELECT image, link, linkTarget, description FROM s_campaigns_banner
@@ -680,7 +686,7 @@ public function sMailCampaignsGetDetail($id)
                     $getCampaignContainers[$campaignKey]['description'] = $getBanner['description'];
                     $getCampaignContainers[$campaignKey]['data'] = $getBanner;
                     break;
-                case 'ctLinks':
+                case Container::TYPE_LINKS:
                     // Query links
                     $getLinks = $this->db->fetchAll("
                         SELECT description, link, target FROM s_campaigns_links
@@ -689,7 +695,7 @@ public function sMailCampaignsGetDetail($id)
                         ");
                     $getCampaignContainers[$campaignKey]['data'] = $getLinks;
                     break;
-                case 'ctArticles':
+                case Container::TYPE_PRODUCTS:
                     $sql = "
                         SELECT articleordernumber, type FROM s_campaigns_articles
                         WHERE parentID={$campaignValue['id']}
@@ -699,8 +705,8 @@ public function sMailCampaignsGetDetail($id)
                     $getProducts = $this->db->fetchAll($sql);
                     $getCampaignContainers[$campaignKey]['data'] = $this->sGetMailCampaignsProducts($getProducts);
                     break;
-                case 'ctText':
-                case 'ctVoucher':
+                case Container::TYPE_TEXT:
+                case Container::TYPE_VOUCHER:
                     $getText = $this->db->fetchRow("
                             SELECT headline, html,image,alignment,link FROM s_campaigns_html
                             WHERE parentID={$campaignValue['id']}
@@ -711,7 +717,7 @@ public function sMailCampaignsGetDetail($id)
                     if (strpos($getText['link'], 'http') === false && $getText['link']) {
                         $getText['link'] = 'http://' . $getText['link'];
                     }
-                    $getCampaignContainers[$campaignKey]['description'] = htmlspecialchars($getText['headline']);
+                    $getCampaignContainers[$campaignKey]['description'] = htmlspecialchars($getText['headline'], ENT_COMPAT);
                     $getCampaignContainers[$campaignKey]['data'] = $getText;
                     break;
             }
diff --git a/engine/Shopware/Models/Newsletter/Container.php b/engine/Shopware/Models/Newsletter/Container.php
index 045a7dae16e..3b42d5c41f0 100644
--- a/engine/Shopware/Models/Newsletter/Container.php
+++ b/engine/Shopware/Models/Newsletter/Container.php
@@ -40,6 +40,13 @@
  */
 class Container extends ModelEntity
 {
+    public const TYPE_TEXT = 'ctText';
+    public const TYPE_PRODUCTS = 'ctArticles';
+    public const TYPE_BANNER = 'ctBanner';
+    public const TYPE_LINKS = 'ctLinks';
+    public const TYPE_VOUCHER = 'ctVoucher';
+    public const TYPE_SUGGEST = 'ctSuggest';
+
     /**
      * INVERSE SIDE
      *
@@ -127,7 +134,7 @@ class Container extends ModelEntity
     /**
      * Type of the container (sText, sBanner etc)
      *
-     * @var string
+     * @var self::TYPE_*
      *
      * @ORM\Column(name="type", type="string", length=255, nullable=false)
      */
@@ -190,7 +197,7 @@ public function getPosition()
     }
 
     /**
-     * @param string $type
+     * @param self::TYPE_* $type
      */
     public function setType($type)
     {
@@ -198,7 +205,7 @@ public function setType($type)
     }
 
     /**
-     * @return string
+     * @return self::TYPE_*
      */
     public function getType()
     {
@@ -245,7 +252,7 @@ public function getValue()
     public function setText($text)
     {
         $return = $this->setOneToOne($text, Text::class, 'text', 'container');
-        $this->setType('ctText');
+        $this->setType(self::TYPE_TEXT);
 
         return $return;
     }
@@ -266,7 +273,7 @@ public function getText()
     public function setArticles($articles)
     {
         $return = $this->setOneToMany($articles, Article::class, 'articles', 'container');
-        $this->setType('ctArticles');
+        $this->setType(self::TYPE_PRODUCTS);
 
         return $return;
     }
@@ -287,7 +294,7 @@ public function getArticles()
     public function setBanner($banner)
     {
         $return = $this->setOneToOne($banner, Banner::class, 'banner', 'container');
-        $this->setType('ctBanner');
+        $this->setType(self::TYPE_BANNER);
 
         return $return;
     }
@@ -308,7 +315,7 @@ public function getBanner()
     public function setLinks($links)
     {
         $return = $this->setOneToMany($links, Link::class, 'links', 'container');
-        $this->setType('ctLinks');
+        $this->setType(self::TYPE_LINKS);
 
         return $return;
     }
diff --git a/engine/Shopware/Models/Newsletter/ContainerType/Article.php b/engine/Shopware/Models/Newsletter/ContainerType/Article.php
index ade39a4e4a4..660ce57eb9f 100644
--- a/engine/Shopware/Models/Newsletter/ContainerType/Article.php
+++ b/engine/Shopware/Models/Newsletter/ContainerType/Article.php
@@ -129,7 +129,7 @@ public function getId()
     public function setContainer($container)
     {
         $this->container = $container;
-        $container->setType('ctArticles');
+        $container->setType(Container::TYPE_PRODUCTS);
     }
 
     /**
diff --git a/engine/Shopware/Models/Newsletter/ContainerType/Banner.php b/engine/Shopware/Models/Newsletter/ContainerType/Banner.php
index 89112acbf7d..42e30e127d4 100644
--- a/engine/Shopware/Models/Newsletter/ContainerType/Banner.php
+++ b/engine/Shopware/Models/Newsletter/ContainerType/Banner.php
@@ -171,7 +171,7 @@ public function getTarget()
     public function setContainer($container)
     {
         $this->container = $container;
-        $container->setType('ctBanner');
+        $container->setType(Container::TYPE_BANNER);
     }
 
     /**
diff --git a/engine/Shopware/Models/Newsletter/ContainerType/Link.php b/engine/Shopware/Models/Newsletter/ContainerType/Link.php
index ed56e7cb2a8..de770a12607 100644
--- a/engine/Shopware/Models/Newsletter/ContainerType/Link.php
+++ b/engine/Shopware/Models/Newsletter/ContainerType/Link.php
@@ -26,6 +26,7 @@
 
 use Doctrine\ORM\Mapping as ORM;
 use Shopware\Components\Model\ModelEntity;
+use Shopware\Models\Newsletter\Container;
 
 /**
  * Shopware text model represents a link container type.
@@ -39,7 +40,7 @@ class Link extends ModelEntity
      * OWNING SIDE
      * Owning side of relation between container type 'article' and parent container
      *
-     * @var \Shopware\Models\Newsletter\Container|null
+     * @var Container|null
      *
      * @ORM\ManyToOne(targetEntity="Shopware\Models\Newsletter\Container", inversedBy="links")
      * @ORM\JoinColumn(name="parentID", referencedColumnName="id")
@@ -165,16 +166,16 @@ public function getTarget()
     }
 
     /**
-     * @param \Shopware\Models\Newsletter\Container $container
+     * @param Container $container
      */
     public function setContainer($container)
     {
         $this->container = $container;
-        $container->setType('ctLinks');
+        $container->setType(Container::TYPE_LINKS);
     }
 
     /**
-     * @return \Shopware\Models\Newsletter\Container|null
+     * @return Container|null
      */
     public function getContainer()
     {
diff --git a/engine/Shopware/Models/Newsletter/ContainerType/Text.php b/engine/Shopware/Models/Newsletter/ContainerType/Text.php
index dde22517a47..31b62efdd01 100644
--- a/engine/Shopware/Models/Newsletter/ContainerType/Text.php
+++ b/engine/Shopware/Models/Newsletter/ContainerType/Text.php
@@ -123,10 +123,10 @@ public function getAlignment()
     }
 
     /**
-     * @param Container $container
-     * @param string    $type
+     * @param Container         $container
+     * @param Container::TYPE_* $type
      */
-    public function setContainer($container, $type = 'ctText')
+    public function setContainer($container, $type = Container::TYPE_TEXT)
     {
         $this->container = $container;
         $container->setType($type);
diff --git a/tests/Functional/Core/MarketingTest.php b/tests/Functional/Core/MarketingTest.php
new file mode 100644
index 00000000000..2a230c6f3d3
--- /dev/null
+++ b/tests/Functional/Core/MarketingTest.php
@@ -0,0 +1,72 @@
+prepareNewsletter();
+
+        $marketingModule = $this->getContainer()->get('modules')->getModule('Marketing');
+        static::assertInstanceOf(sMarketing::class, $marketingModule);
+
+        $newsletter = $marketingModule->sMailCampaignsGetDetail($newsletterId);
+        static::assertIsArray($newsletter);
+
+        static::assertSame("<script>alert('XSS')</script>", $newsletter['containers'][0]['description']);
+    }
+
+    private function prepareNewsletter(): int
+    {
+        $connection = $this->getContainer()->get(Connection::class);
+
+        $connection->insert('s_campaigns_mailings', []);
+        $newsletterId = (int) $connection->lastInsertId();
+
+        $connection->insert('s_campaigns_containers', [
+            'promotionID' => $newsletterId,
+            'type' => Container::TYPE_TEXT,
+        ]);
+        $newsletterContainerId = (int) $connection->lastInsertId();
+
+        $connection->insert('s_campaigns_html', [
+            'parentID' => $newsletterContainerId,
+            'headline' => "",
+        ]);
+
+        return $newsletterId;
+    }
+}
