5f81b0c48a817d4337d8b0e99ea0b4744ecd720b
miltonio@@milton2
diff --git a/milton-api/src/main/java/io/milton/http/AclUtils.java b/milton-api/src/main/java/io/milton/http/AclUtils.java
index bbd42330..143ed3ad 100644
--- a/milton-api/src/main/java/io/milton/http/AclUtils.java
+++ b/milton-api/src/main/java/io/milton/http/AclUtils.java
@@ -29,19 +29,22 @@
  * @author brad

  */

 public class AclUtils {

-    

+

     /**

-     * Recurisve function which checks the given collection of priviledges, 

+     * Recurisve function which checks the given collection of priviledges,

      * and checks inside the contains property of those priviledges

-     * 

+     *

      * Returns true if the required priviledge is directly present in the collection

      * or is implied

-     * 

+     *

      * @param required

      * @param privs

-     * @return 

+     * @return

      */

     public static boolean containsPriviledge(AccessControlledResource.Priviledge required, Iterable privs) {

+        if( privs == null ) {

+            return false;

+        }

         for (AccessControlledResource.Priviledge p : privs) {

             if (p.equals(required)) {

                 return true;

@@ -51,18 +54,18 @@ public static boolean containsPriviledge(AccessControlledResource.Priviledge req
             }

         }

         return false;

-    }      

-    

+    }

+

     public static Set asSet(AccessControlledResource.Priviledge ... privs) {

         Set set = new HashSet(privs.length);

         set.addAll(Arrays.asList(privs));

         return set;

     }

-    

+

     /**

-     * Return a set containing all privs in the given collection, and also all priviledges 

+     * Return a set containing all privs in the given collection, and also all priviledges

      * implies by those, and so on recursively

-     * 

+     *

      * @param privs

      * @return - a set containiing all priviledges, direct or implied, by the given collection

      */

@@ -71,7 +74,7 @@ public static Set expand(Iterable privs, Set output) {

         if( privs == null ) {

             return ;

@@ -80,6 +83,6 @@ private static void _expand(Iterable privs,
             output.add(p);

             _expand(p.contains, output);

         }

-        

+

     }

 }

