35f0fabb4c178253a964d7aabdbb15c6a398b69a
tensorflow@@tensorflow
diff --git a/tensorflow/compiler/mlir/tfrt/jit/transforms/tf_cpurt_symbolic_shape_optimization.cc b/tensorflow/compiler/mlir/tfrt/jit/transforms/tf_cpurt_symbolic_shape_optimization.cc
index 628141a6cd461..0a8fc42e80a7c 100644
--- a/tensorflow/compiler/mlir/tfrt/jit/transforms/tf_cpurt_symbolic_shape_optimization.cc
+++ b/tensorflow/compiler/mlir/tfrt/jit/transforms/tf_cpurt_symbolic_shape_optimization.cc
@@ -157,6 +157,10 @@ llvm::Optional simplifyBroadcast(ShapeComponentAnalysis& analysis,
     shapes_found.push_back(*found_shape);
     maxRank = std::max(maxRank, found_shape->size());
   }
+  if (maxRank == 0) {
+    return Value(builder->create(
+        loc, shapes[0].getType(), SmallVector()));
+  }
 
   SmallVector joined_dimensions(
       maxRank);
diff --git a/tensorflow/compiler/mlir/tfrt/python_tests/regression_tests/scalar_broadcast.mlir b/tensorflow/compiler/mlir/tfrt/python_tests/regression_tests/scalar_broadcast.mlir
new file mode 100644
index 0000000000000..33b785ee6fb19
--- /dev/null
+++ b/tensorflow/compiler/mlir/tfrt/python_tests/regression_tests/scalar_broadcast.mlir
@@ -0,0 +1,11 @@
+builtin.func @test(%V__0 : tensor { python_test_attrs.static_type = tensor }, %V__1 : tensor { python_test_attrs.static_type = tensor }, %V__2 : tensor { python_test_attrs.static_type = tensor }) -> tensor {
+  %0 = "tf.Cast"(%V__0) : (tensor) -> tensor
+  %1 = "tf.Selu"(%V__2) : (tensor) -> tensor
+  %2 = "tf.NextAfter"(%1, %V__2) : (tensor, tensor) -> tensor
+  %3 = "tf.Elu"(%2) : (tensor) -> tensor
+  %4 = "tf.Cosh"(%3) : (tensor) -> tensor
+  %5 = "tf.Elu"(%4) : (tensor) -> tensor
+  %6 = "tf.Div"(%V__1, %5) : (tensor, tensor) -> tensor
+  %7 = "tf.Select"(%0, %6, %V__1) : (tensor, tensor, tensor) -> tensor
+  return %7 : tensor
+}
\ No newline at end of file
