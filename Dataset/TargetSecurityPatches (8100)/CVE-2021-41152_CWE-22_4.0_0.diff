418bb509ffcb0e25ab4390563c6c47f0458583eb
OpenOLAT@@OpenOLAT
diff --git a/src/main/java/org/olat/core/commons/modules/bc/FileSelection.java b/src/main/java/org/olat/core/commons/modules/bc/FileSelection.java
index 6ce216023f..aa079de5c5 100644
--- a/src/main/java/org/olat/core/commons/modules/bc/FileSelection.java
+++ b/src/main/java/org/olat/core/commons/modules/bc/FileSelection.java
@@ -27,24 +27,29 @@
 package org.olat.core.commons.modules.bc;
 
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.List;
+import java.util.Set;
+import java.util.stream.Collectors;
 
 import org.olat.core.gui.UserRequest;
 import org.olat.core.util.FileUtils;
 import org.olat.core.util.StringHelper;
+import org.olat.core.util.vfs.VFSContainer;
+import org.olat.core.util.vfs.VFSItem;
 
 public class FileSelection {
 
 	/** HTML form identifier */
 	public static final String FORM_ID = "paths";
 	
-	private List files = new ArrayList<>();
-	private String currentContainerRelPath;
+	private final List files = new ArrayList<>();
+	private final String currentContainerRelPath;
+	private final VFSContainer currentContainer;
 	
-	public FileSelection(UserRequest ureq, String currentContainerRelPath) {
+	public FileSelection(UserRequest ureq, VFSContainer currentContainer, String currentContainerRelPath) {
 		if (currentContainerRelPath.equals("/")) currentContainerRelPath = "";
 		this.currentContainerRelPath = currentContainerRelPath;
+		this.currentContainer = currentContainer;
 		parse(ureq);
 	}
 
@@ -76,8 +81,20 @@ public List getInvalidFileNames() {
 	 */
 	private void parse(UserRequest ureq) {
 		String[] sFiles = ureq.getHttpReq().getParameterValues(FORM_ID);
-		if (sFiles == null || sFiles.length == 0) return;
-		files = Arrays.asList(sFiles);
+		if (sFiles == null || sFiles.length == 0) {
+			return;
+		}
+		List items = currentContainer.getItems();
+		if(items != null && !items.isEmpty()) {
+			Set itemNames =  items.stream()
+					.map(VFSItem::getName)
+					.collect(Collectors.toSet());
+			for(String sFile:sFiles) {
+				if(itemNames.contains(sFile)) {
+					files.add(sFile);
+				}
+			}
+		}
 	}
 
 	/**
diff --git a/src/main/java/org/olat/core/commons/modules/bc/commands/CmdDelete.java b/src/main/java/org/olat/core/commons/modules/bc/commands/CmdDelete.java
index cf42cd3a7c..48d838a10c 100644
--- a/src/main/java/org/olat/core/commons/modules/bc/commands/CmdDelete.java
+++ b/src/main/java/org/olat/core/commons/modules/bc/commands/CmdDelete.java
@@ -74,7 +74,7 @@ protected CmdDelete(UserRequest ureq, WindowControl wControl) {
 	public Controller execute(FolderComponent fc, UserRequest ureq, WindowControl wContr, Translator trans) {
 		this.translator = trans;
 		this.folderComponent = fc;
-		this.fileSelection = new FileSelection(ureq, fc.getCurrentContainerPath());
+		this.fileSelection = new FileSelection(ureq, fc.getCurrentContainer(), fc.getCurrentContainerPath());
 
 		VFSContainer currentContainer = folderComponent.getCurrentContainer();
 		List lockedFiles = hasLockedFiles(currentContainer, fileSelection);
diff --git a/src/main/java/org/olat/core/commons/modules/bc/commands/CmdDownloadZip.java b/src/main/java/org/olat/core/commons/modules/bc/commands/CmdDownloadZip.java
index 53112a9385..520e57bf1d 100644
--- a/src/main/java/org/olat/core/commons/modules/bc/commands/CmdDownloadZip.java
+++ b/src/main/java/org/olat/core/commons/modules/bc/commands/CmdDownloadZip.java
@@ -70,7 +70,7 @@ public Controller execute(FolderComponent folderComponent, UserRequest ureq, Win
 			return null;
 		}
 	
-		FileSelection selection = new FileSelection(ureq, folderComponent.getCurrentContainerPath());
+		FileSelection selection = new FileSelection(ureq, folderComponent.getCurrentContainer(), folderComponent.getCurrentContainerPath());
 		status = FolderCommandHelper.sanityCheck3(wControl, folderComponent, selection);
 		if(status == FolderCommandStatus.STATUS_FAILED) {
 			return null;
@@ -78,7 +78,7 @@ public Controller execute(FolderComponent folderComponent, UserRequest ureq, Win
 		
 		if(selection.getFiles().isEmpty()) {
 			status = FolderCommandStatus.STATUS_FAILED;
-			wControl.setWarning(trans.translate("warning.file.selection.empty"));
+			wControl.setWarning(trans.translate("warning.file.selection.empty22"));
 			return null;
 		}
 		
diff --git a/src/main/java/org/olat/core/commons/modules/bc/commands/CmdMoveCopy.java b/src/main/java/org/olat/core/commons/modules/bc/commands/CmdMoveCopy.java
index d9388b4376..995ffb1612 100644
--- a/src/main/java/org/olat/core/commons/modules/bc/commands/CmdMoveCopy.java
+++ b/src/main/java/org/olat/core/commons/modules/bc/commands/CmdMoveCopy.java
@@ -89,7 +89,7 @@ protected CmdMoveCopy(WindowControl wControl, boolean move) {
 	public Controller execute(FolderComponent fc, UserRequest ureq, WindowControl windowControl, Translator trans) {
 		this.folderComponent = fc;
 		this.translator = trans;
-		this.fileSelection = new FileSelection(ureq, fc.getCurrentContainerPath());
+		this.fileSelection = new FileSelection(ureq, fc.getCurrentContainer(), fc.getCurrentContainerPath());
 				
 		VelocityContainer main = new VelocityContainer("mc", VELOCITY_ROOT + "/movecopy.html", translator, this);
 		main.contextPut("fileselection", fileSelection);
diff --git a/src/main/java/org/olat/core/commons/modules/bc/commands/CmdUnzip.java b/src/main/java/org/olat/core/commons/modules/bc/commands/CmdUnzip.java
index 88d14a80ea..4db910aee3 100644
--- a/src/main/java/org/olat/core/commons/modules/bc/commands/CmdUnzip.java
+++ b/src/main/java/org/olat/core/commons/modules/bc/commands/CmdUnzip.java
@@ -77,7 +77,7 @@ public CmdUnzip(UserRequest ureq, WindowControl wControl) {
 	@Override
 	public Controller execute(FolderComponent folderComponent, UserRequest ureq, WindowControl wContr, Translator trans) {
 		this.translator = trans;
-		FileSelection selection = new FileSelection(ureq, folderComponent.getCurrentContainerPath());
+		FileSelection selection = new FileSelection(ureq, folderComponent.getCurrentContainer(), folderComponent.getCurrentContainerPath());
 		VFSContainer currentContainer = folderComponent.getCurrentContainer();
 		if (currentContainer.canWrite() != VFSConstants.YES)
 			throw new AssertException("Cannot unzip to folder. Writing denied.");
diff --git a/src/main/java/org/olat/core/commons/modules/bc/commands/CmdZip.java b/src/main/java/org/olat/core/commons/modules/bc/commands/CmdZip.java
index ef8d4e8e29..8618907956 100644
--- a/src/main/java/org/olat/core/commons/modules/bc/commands/CmdZip.java
+++ b/src/main/java/org/olat/core/commons/modules/bc/commands/CmdZip.java
@@ -89,7 +89,7 @@ public Controller execute(FolderComponent folderComponent, UserRequest ureq, Win
 			return null;
 		}
 	
-		selection = new FileSelection(ureq, folderComponent.getCurrentContainerPath());
+		selection = new FileSelection(ureq, folderComponent.getCurrentContainer(), folderComponent.getCurrentContainerPath());
 		status = FolderCommandHelper.sanityCheck3(wControl, folderComponent, selection);
 		if(status == FolderCommandStatus.STATUS_FAILED) {
 			return null;
diff --git a/src/main/java/org/olat/core/util/mail/ui/SendDocumentsByEMailController.java b/src/main/java/org/olat/core/util/mail/ui/SendDocumentsByEMailController.java
index 0365cdd997..9dcbdcb8f2 100644
--- a/src/main/java/org/olat/core/util/mail/ui/SendDocumentsByEMailController.java
+++ b/src/main/java/org/olat/core/util/mail/ui/SendDocumentsByEMailController.java
@@ -189,7 +189,7 @@ public Controller execute(FolderComponent folderComponent, UserRequest ureq, Win
 		if (status == FolderCommandStatus.STATUS_FAILED) {
 			return null;
 		}
-		FileSelection selection = new FileSelection(ureq, folderComponent.getCurrentContainerPath());
+		FileSelection selection = new FileSelection(ureq, folderComponent.getCurrentContainer(), folderComponent.getCurrentContainerPath());
 		status = FolderCommandHelper.sanityCheck3(wControl, folderComponent, selection);
 		if (status == FolderCommandStatus.STATUS_FAILED) {
 			return null;
