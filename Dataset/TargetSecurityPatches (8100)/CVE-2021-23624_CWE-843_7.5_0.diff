88f61860dcc274a07a263c32cbe9d44c24ef02d7
deoxxa@@dotty
diff --git a/.DS_Store b/.DS_Store
deleted file mode 100644
index f277d81..0000000
Binary files a/.DS_Store and /dev/null differ
diff --git a/.github/workflows/main.yml b/.github/workflows/main.yml
index e01c5c2..42b822f 100644
--- a/.github/workflows/main.yml
+++ b/.github/workflows/main.yml
@@ -5,17 +5,16 @@ on:
     branches:
       - main
       - master
-
 jobs:
   build:
     runs-on: ubuntu-latest
     strategy:
       matrix:
-        node-version: [6.x, 8.x]
+        node-version: [10.x, 12.x, 14.x, 16.x]
     steps:
       - uses: actions/checkout@v2
       - name: Use Node.js ${{ matrix.node-version }}
-        uses: actions/setup-node@v1
+        uses: actions/setup-node@v2
         with:
           node-version: ${{ matrix.node-version }}
       - run: npm install
diff --git a/docs/docco.css b/docs/docco.css
index b60f6fa..c3d580f 100644
--- a/docs/docco.css
+++ b/docs/docco.css
@@ -213,7 +213,7 @@ ul.sections > li > div {
 
 /*---------------------- Low resolutions (> 320px) ---------------------*/
 @media only screen and (min-width: 320px) {
-  .pilwrap { display: none; }
+  .sswrap { display: none; }
 
   ul.sections > li > div {
     display: block;
@@ -330,12 +330,12 @@ ul.sections > li > div {
     box-shadow: none;
   }
 
-  .pilwrap {
+  .sswrap {
     position: relative;
     display: inline;
   }
 
-  .pilcrow {
+  .ss {
     font: 12px Arial;
     text-decoration: none;
     color: #454545;
@@ -345,14 +345,14 @@ ul.sections > li > div {
     opacity: 0;
     -webkit-transition: opacity 0.2s linear;
   }
-    .for-h1 .pilcrow {
+    .for-h1 .ss {
       top: 47px;
     }
-    .for-h2 .pilcrow, .for-h3 .pilcrow, .for-h4 .pilcrow {
+    .for-h2 .ss, .for-h3 .ss, .for-h4 .ss {
       top: 35px;
     }
 
-  ul.sections > li > div.annotation:hover .pilcrow {
+  ul.sections > li > div.annotation:hover .ss {
     opacity: 1;
   }
 }
diff --git a/docs/lib/index.html b/docs/lib/index.html
index 519d056..cc12238 100644
--- a/docs/lib/index.html
+++ b/docs/lib/index.html
@@ -24,8 +24,8 @@ index.js


               
-              
-                ¶
+              
+                §

Dotty makes it easy to programmatically access arbitrarily nested objects and
 their properties.
@@ -38,8 +38,8 @@ index.js


               
-              
-                ¶
+              
+                §

object is an object, path is the path to the property you want to check
 for existence of.
@@ -50,27 +50,27 @@ index.js


-var exists = (module.exports.exists = function exists(object, path) {
-  if (typeof path === "string") {
-    path = path.split(".");
+var exists = (module.exports.exists = function exists(object, path) {
+  if (typeof path === "string") {
+    path = path.split(".");
   }
 
-  if (!(path instanceof Array) || path.length === 0) {
+  if (!(path instanceof Array) || path.length === 0) {
     return false;
   }
 
-  path = path.slice();
+  path = path.slice();
 
-  var key = path.shift();
+  var key = path.shift();
 
-  if (typeof object !== "object" || object === null) {
+  if (typeof object !== "object" || object === null) {
     return false;
   }
 
-  if (path.length === 0) {
-    return Object.hasOwnProperty.apply(object, [key]);
+  if (path.length === 0) {
+    return Object.hasOwnProperty.apply(object, [key]);
   } else {
-    return exists(object[key], path);
+    return exists(object[key], path);
   }
 });
             
@@ -80,8 +80,8 @@ index.js


               
-              
-                ¶
+              
+                §

These arguments are the same as those for exists.
The return value, however, is the property you’re trying to access, or
@@ -93,29 +93,29 @@ index.js


-var get = (module.exports.get = function get(object, path) {
-  if (typeof path === "string") {
-    path = path.split(".");
+var get = (module.exports.get = function get(object, path) {
+  if (typeof path === "string") {
+    path = path.split(".");
   }
 
-  if (!(path instanceof Array) || path.length === 0) {
+  if (!(path instanceof Array) || path.length === 0) {
     return;
   }
 
-  path = path.slice();
+  path = path.slice();
 
-  var key = path.shift();
+  var key = path.shift();
 
-  if (typeof object !== "object" || object === null) {
+  if (typeof object !== "object" || object === null) {
     return;
   }
 
-  if (path.length === 0) {
+  if (path.length === 0) {
     return object[key];
   }
 
-  if (path.length) {
-    return get(object[key], path);
+  if (path.length) {
+    return get(object[key], path);
   }
 });
             
@@ -125,8 +125,8 @@ index.js


               
-              
-                ¶
+              
+                §

Arguments are similar to exists and get, with the exception that path
 components are regexes with some special cases. If a path component is "*"
@@ -139,48 +139,48 @@ index.js


-var search = (module.exports.search = function search(object, path, action) {
-  if (typeof path === "string") {
-    path = path.split(".");
+var search = (module.exports.search = function search(object, path, action) {
+  if (typeof path === "string") {
+    path = path.split(".");
   }
 
-  if (!(path instanceof Array) || path.length === 0) {
+  if (!(path instanceof Array) || path.length === 0) {
     return;
   }
 
-  path = path.slice();
+  path = path.slice();
 
-  var key = path.shift();
+  var key = path.shift();
 
-  if (typeof object !== "object" || object === null) {
+  if (typeof object !== "object" || object === null) {
     return;
   }
 
-  if (key === "*") {
-    key = ".*";
+  if (key === "*") {
+    key = ".*";
   }
 
-  if (typeof key === "string") {
-    key = new RegExp(key);
+  if (typeof key === "string") {
+    key = new RegExp(key);
   }
 
-  if (path.length === 0) {
-    return Object.keys(object)
-      .filter(key.test.bind(key))
-      .map(function (k) {
+  if (path.length === 0) {
+    return Object.keys(object)
+      .filter(key.test.bind(key))
+      .map(function (k) {
         var value = object[k];
         if (action) {
-          action(value, object, k);
+          action(value, object, k);
         }
         return value;
       });
   } else {
-    return Array.prototype.concat.apply(
+    return Array.prototype.concat.apply(
       [],
-      Object.keys(object)
-        .filter(key.test.bind(key))
-        .map(function (k) {
-          return search(object[k], path, action);
+      Object.keys(object)
+        .filter(key.test.bind(key))
+        .map(function (k) {
+          return search(object[k], path, action);
         })
     );
   }
@@ -192,8 +192,8 @@ index.js
         
             
               
-              
-                ¶
+              
+                §
               
               Perform a search and remove the matched keys.
 The return value is the same object argument with modifications.
@@ -201,11 +201,11 @@ index.js
             
             
             
-var removeSearch = (module.exports.removeSearch = function removeSearch(
+var removeSearch = (module.exports.removeSearch = function removeSearch(
   object,
   path
-) {
-  search(object, path, function (value, object, key) {
+) {
+  search(object, path, function (value, object, key) {
     delete object[key];
   });
   return object;
@@ -217,8 +217,8 @@ index.js
         
             
               
-              
-                ¶
+              
+                §
               
               The first two arguments for put are the same as exists and get.
 The third argument is a value to put at the path of the object.
@@ -231,34 +231,34 @@ index.js
             
             
             
-var put = (module.exports.put = function put(object, path, value) {
-  if (typeof path === "string") {
-    path = path.split(".");
+var put = (module.exports.put = function put(object, path, value) {
+  if (typeof path === "string") {
+    path = path.split(".");
   }
 
-  if (!(path instanceof Array) || path.length === 0) {
+  if (!(path instanceof Array) || path.length === 0) {
     return false;
   }
 
-  path = path.slice();
+  path = path.slice();
 
-  var key = path.shift();
+  var key = "" + path.shift();
 
-  if (typeof object !== "object" || object === null || key === "__proto__") {
+  if (typeof object !== "object" || object === null || key === "__proto__") {
     return false;
   }
-  if (path.length === 0) {
+  if (path.length === 0) {
     object[key] = value;
   } else {
-    if (typeof object[key] === "undefined") {
+    if (typeof object[key] === "undefined") {
       object[key] = {};
     }
 
-    if (typeof object[key] !== "object" || object[key] === null) {
+    if (typeof object[key] !== "object" || object[key] === null) {
       return false;
     }
 
-    return put(object[key], path, value);
+    return put(object[key], path, value);
   }
 });
             
@@ -268,8 +268,8 @@ index.js
         
             
               
-              
-                ¶
+              
+                §
               
               remove is like put in reverse!
 The return value is true in the case that the value existed and was removed
@@ -278,25 +278,25 @@ index.js
             
             
             
-var remove = (module.exports.remove = function remove(object, path, value) {
-  if (typeof path === "string") {
-    path = path.split(".");
+var remove = (module.exports.remove = function remove(object, path, value) {
+  if (typeof path === "string") {
+    path = path.split(".");
   }
 
-  if (!(path instanceof Array) || path.length === 0) {
+  if (!(path instanceof Array) || path.length === 0) {
     return false;
   }
 
-  path = path.slice();
+  path = path.slice();
 
-  var key = path.shift();
+  var key = path.shift();
 
-  if (typeof object !== "object" || object === null) {
+  if (typeof object !== "object" || object === null) {
     return false;
   }
 
-  if (path.length === 0) {
-    if (!Object.hasOwnProperty.call(object, key)) {
+  if (path.length === 0) {
+    if (!Object.hasOwnProperty.call(object, key)) {
       return false;
     }
 
@@ -304,7 +304,7 @@ index.js
 
     return true;
   } else {
-    return remove(object[key], path, value);
+    return remove(object[key], path, value);
   }
 });
             
@@ -314,14 +314,14 @@ index.js
         
             
               
-              
-                ¶
+              
+                §
               
               deepKeys creates a list of all possible key paths for a given object.
 The return value is always an array, the members of which are paths in array
 format. If you want them in dot-notation format, do something like this:
-dotty.deepKeys(obj).map(function(e) {
-  return e.join(".");
+dotty.deepKeys(obj).map(function(e) {
+  return e.join(".");
 });
 
 Note: this will probably explode on recursive objects. Be careful.
@@ -329,42 +329,42 @@ index.js
             
             
             
-var deepKeys = (module.exports.deepKeys = function deepKeys(
+var deepKeys = (module.exports.deepKeys = function deepKeys(
   object,
   options,
   prefix
-) {
+) {
   options = options || {};
 
-  if (typeof prefix === "undefined") {
+  if (typeof prefix === "undefined") {
     prefix = [];
   }
 
   var keys = [];
 
   for (var k in object) {
-    if (!Object.hasOwnProperty.call(object, k)) {
+    if (!Object.hasOwnProperty.call(object, k)) {
       continue;
     }
 
-    if (!options.leavesOnly || typeof object[k] !== "object") {
-      keys.push(prefix.concat([k]));
+    if (!options.leavesOnly || typeof object[k] !== "object") {
+      keys.push(prefix.concat([k]));
     }
 
-    if (typeof object[k] === "object" && object[k] !== null) {
-      keys = keys.concat(
-        deepKeys(
+    if (typeof object[k] === "object" && object[k] !== null) {
+      keys = keys.concat(
+        deepKeys(
           object[k],
-          { leavesOnly: options.leavesOnly },
-          prefix.concat([k])
+          { leavesOnly: options.leavesOnly },
+          prefix.concat([k])
         )
       );
     }
   }
 
-  if (options.asStrings) {
-    keys = keys.map(function (e) {
-      return e.join(".");
+  if (options.asStrings) {
+    keys = keys.map(function (e) {
+      return e.join(".");
     });
   }
 
diff --git a/docs/public/fonts/roboto-black.eot b/docs/public/fonts/roboto-black.eot
old mode 100755
new mode 100644
diff --git a/docs/public/fonts/roboto-black.ttf b/docs/public/fonts/roboto-black.ttf
old mode 100755
new mode 100644
diff --git a/docs/public/fonts/roboto-black.woff b/docs/public/fonts/roboto-black.woff
old mode 100755
new mode 100644
diff --git a/lib/index.js b/lib/index.js
index c87cb22..14fb644 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -170,7 +170,7 @@ var put = (module.exports.put = function put(object, path, value) {
 
   path = path.slice();
 
-  var key = path.shift();
+  var key = "" + path.shift();
 
   if (typeof object !== "object" || object === null || key === "__proto__") {
     return false;
@@ -188,6 +188,8 @@ var put = (module.exports.put = function put(object, path, value) {
 
     return put(object[key], path, value);
   }
+
+  return true;
 });
 
 //
diff --git a/package-lock.json b/package-lock.json
index b3c5923..8bed110 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -4,22 +4,44 @@
   "lockfileVersion": 1,
   "requires": true,
   "dependencies": {
+    "balanced-match": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
+      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
+      "dev": true
+    },
+    "brace-expansion": {
+      "version": "1.1.11",
+      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
+      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
+      "dev": true,
+      "requires": {
+        "balanced-match": "^1.0.0",
+        "concat-map": "0.0.1"
+      }
+    },
     "commander": {
-      "version": "2.14.1",
-      "resolved": "https://registry.npmjs.org/commander/-/commander-2.14.1.tgz",
-      "integrity": "sha512-+YR16o3rK53SmWHU3rEM3tPAh2rwb1yPcQX5irVn7mb0gXbwuCCrnkbV5+PBfETdfg1vui07nM6PCG1zndcjQw==",
+      "version": "8.3.0",
+      "resolved": "https://registry.npmjs.org/commander/-/commander-8.3.0.tgz",
+      "integrity": "sha512-OkTL9umf+He2DZkUq8f8J9of7yL6RJKI24dVITBmNfZBmri9zYZQrKkuXiKhyfPSu8tUhnVBB1iKXevvnlR4Ww==",
+      "dev": true
+    },
+    "concat-map": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
+      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
       "dev": true
     },
     "diff": {
-      "version": "1.0.8",
-      "resolved": "https://registry.npmjs.org/diff/-/diff-1.0.8.tgz",
-      "integrity": "sha1-NDJ2MI7Jkbe8giZ+1VvBQR+XFmY=",
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
+      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
       "dev": true
     },
     "docco": {
-      "version": "0.8.0",
-      "resolved": "https://registry.npmjs.org/docco/-/docco-0.8.0.tgz",
-      "integrity": "sha512-QcWBDnnGaT+rgC0wqynznXv0/4hd6nAFdWNs2fN4FvkH2yAnCYVeRU7GIZXNCeUQ955Lufq+TmZcSXiBa1cGQQ==",
+      "version": "0.8.1",
+      "resolved": "https://registry.npmjs.org/docco/-/docco-0.8.1.tgz",
+      "integrity": "sha512-OFVdjpxw4aTI+FThrCY2NEWZV/nvGDFlfeQxUTMkKL+oY2gD2sMl0N5ogoAj3YLZU05UDBSh64ROYzLFzxSoSQ==",
       "dev": true,
       "requires": {
         "commander": ">= 0.5.2",
@@ -36,94 +58,89 @@
       "dev": true
     },
     "fs-extra": {
-      "version": "5.0.0",
-      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-5.0.0.tgz",
-      "integrity": "sha512-66Pm4RYbjzdyeuqudYqhFiNBbCIuI9kgRqLPSHIlXHidW8NIQtVdkM1yeZ4lXwuhbTETv3EUGMNHAAw6hiundQ==",
+      "version": "10.0.0",
+      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-10.0.0.tgz",
+      "integrity": "sha512-C5owb14u9eJwizKGdchcDUQeFtlSHHthBk8pbX9Vc1PFZrLombudjDnNns88aYslCyF6IY5SUw3Roz6xShcEIQ==",
       "dev": true,
       "requires": {
-        "graceful-fs": "^4.1.2",
-        "jsonfile": "^4.0.0",
-        "universalify": "^0.1.0"
+        "graceful-fs": "^4.2.0",
+        "jsonfile": "^6.0.1",
+        "universalify": "^2.0.0"
       }
     },
+    "fs.realpath": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
+      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8=",
+      "dev": true
+    },
     "glob": {
-      "version": "4.0.6",
-      "resolved": "https://registry.npmjs.org/glob/-/glob-4.0.6.tgz",
-      "integrity": "sha1-aVxQvdTi+1xdNwsJHziNNwfikac=",
+      "version": "7.2.0",
+      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.0.tgz",
+      "integrity": "sha512-lmLf6gtyrPq8tTjSmrO94wBeQbFR3HbLHbuyD69wuyQkImp2hWqMGB47OX65FBkPffO641IP9jWa1z4ivqG26Q==",
       "dev": true,
       "requires": {
-        "graceful-fs": "^3.0.2",
+        "fs.realpath": "^1.0.0",
+        "inflight": "^1.0.4",
         "inherits": "2",
-        "minimatch": "^1.0.0",
-        "once": "^1.3.0"
-      },
-      "dependencies": {
-        "graceful-fs": {
-          "version": "3.0.11",
-          "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-3.0.11.tgz",
-          "integrity": "sha1-dhPHeKGv6mLyXGMKCG1/Osu92Bg=",
-          "dev": true,
-          "requires": {
-            "natives": "^1.1.0"
-          }
-        }
+        "minimatch": "^3.0.4",
+        "once": "^1.3.0",
+        "path-is-absolute": "^1.0.0"
       }
     },
     "graceful-fs": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
-      "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg=",
+      "version": "4.2.8",
+      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.8.tgz",
+      "integrity": "sha512-qkIilPUYcNhJpd33n0GBXTB1MMPp14TxEsEs0pTrsSVucApsYzW5V+Q8Qxhik6KU3evy+qkAAowTByymK0avdg==",
       "dev": true
     },
     "highlight.js": {
-      "version": "10.5.0",
-      "resolved": "https://registry.npmjs.org/highlight.js/-/highlight.js-10.5.0.tgz",
-      "integrity": "sha512-xTmvd9HiIHR6L53TMC7TKolEj65zG1XU+Onr8oi86mYa+nLcIbxTTWkpW7CsEwv/vK7u1zb8alZIMLDqqN6KTw==",
+      "version": "11.3.1",
+      "resolved": "https://registry.npmjs.org/highlight.js/-/highlight.js-11.3.1.tgz",
+      "integrity": "sha512-PUhCRnPjLtiLHZAQ5A/Dt5F8cWZeMyj9KRsACsWT+OD6OP0x6dp5OmT5jdx0JgEyPxPZZIPQpRN2TciUT7occw==",
       "dev": true
     },
+    "inflight": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
+      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
+      "dev": true,
+      "requires": {
+        "once": "^1.3.0",
+        "wrappy": "1"
+      }
+    },
     "inherits": {
-      "version": "2.0.3",
-      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
-      "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
       "dev": true
     },
     "jsonfile": {
-      "version": "4.0.0",
-      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
-      "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
+      "version": "6.1.0",
+      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
+      "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
       "dev": true,
       "requires": {
-        "graceful-fs": "^4.1.6"
+        "graceful-fs": "^4.1.6",
+        "universalify": "^2.0.0"
       }
     },
-    "lru-cache": {
-      "version": "2.7.3",
-      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-2.7.3.tgz",
-      "integrity": "sha1-bUUk6LlV+V1PW1iFHOId1y+06VI=",
-      "dev": true
-    },
     "marked": {
-      "version": "1.2.7",
-      "resolved": "https://registry.npmjs.org/marked/-/marked-1.2.7.tgz",
-      "integrity": "sha512-No11hFYcXr/zkBvL6qFmAp1z6BKY3zqLMHny/JN/ey+al7qwCM2+CMBL9BOgqMxZU36fz4cCWfn2poWIf7QRXA==",
+      "version": "3.0.8",
+      "resolved": "https://registry.npmjs.org/marked/-/marked-3.0.8.tgz",
+      "integrity": "sha512-0gVrAjo5m0VZSJb4rpL59K1unJAMb/hm8HRXqasD8VeC8m91ytDPMritgFSlKonfdt+rRYYpP/JfLxgIX8yoSw==",
       "dev": true
     },
     "minimatch": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-1.0.0.tgz",
-      "integrity": "sha1-4N0hILSeG3JM6NcUxSCCKpQ4V20=",
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
+      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
       "dev": true,
       "requires": {
-        "lru-cache": "2",
-        "sigmund": "~1.0.0"
+        "brace-expansion": "^1.1.7"
       }
     },
-    "natives": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/natives/-/natives-1.1.1.tgz",
-      "integrity": "sha512-8eRaxn8u/4wN8tGkhlc2cgwwvOLMLUMUn4IYTexMgWd+LyUDfeXVkk2ygQR0hvIHbJQXgHujia3ieUUDwNGkEA==",
-      "dev": true
-    },
     "once": {
       "version": "1.4.0",
       "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
@@ -133,33 +150,33 @@
         "wrappy": "1"
       }
     },
-    "sigmund": {
+    "path-is-absolute": {
       "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/sigmund/-/sigmund-1.0.1.tgz",
-      "integrity": "sha1-P/IfGYytIXX587eBhT/ZTQ0ZtZA=",
+      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
+      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
       "dev": true
     },
     "underscore": {
-      "version": "1.8.3",
-      "resolved": "https://registry.npmjs.org/underscore/-/underscore-1.8.3.tgz",
-      "integrity": "sha1-Tz+1OxBuYJf8+ctBCfKl6b36UCI=",
+      "version": "1.13.1",
+      "resolved": "https://registry.npmjs.org/underscore/-/underscore-1.13.1.tgz",
+      "integrity": "sha512-hzSoAVtJF+3ZtiFX0VgfFPHEDRm7Y/QPjGyNo4TVdnDTdft3tr8hEkD25a1jC+TjTuE7tkHGKkhwCgs9dgBB2g==",
       "dev": true
     },
     "universalify": {
-      "version": "0.1.1",
-      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.1.tgz",
-      "integrity": "sha1-+nG63UQ3r0wUiEHjs7Fl+enlkLc=",
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
+      "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
       "dev": true
     },
     "vows": {
-      "version": "0.8.1",
-      "resolved": "https://registry.npmjs.org/vows/-/vows-0.8.1.tgz",
-      "integrity": "sha1-4J6YjOWUygWgjXKrzKNOiNtVkTE=",
+      "version": "0.8.3",
+      "resolved": "https://registry.npmjs.org/vows/-/vows-0.8.3.tgz",
+      "integrity": "sha512-PVIxa/ovXhrw5gA3mz6M+ZF3PHlqX4tutR2p/y9NWPAaFVKcWBE8b2ktfr0opQM/qFmcOVWKjSCJVjnYOvjXhw==",
       "dev": true,
       "requires": {
-        "diff": "~1.0.8",
+        "diff": "^4.0.1",
         "eyes": "~0.1.6",
-        "glob": "~4.0.6"
+        "glob": "^7.1.2"
       }
     },
     "wrappy": {
diff --git a/package.json b/package.json
index 43dcff9..70f9fc5 100644
--- a/package.json
+++ b/package.json
@@ -21,7 +21,7 @@
   "author": "Conrad Pankoff  (http://www.fknsrs.biz/)",
   "license": "BSD-3-Clause",
   "devDependencies": {
-    "vows": "^0.8.0",
-    "docco": "^0.8.0"
+    "vows": "^0.8.3",
+    "docco": "^0.8.1"
   }
 }
diff --git a/test/put-test.js b/test/put-test.js
index d16f541..87b99b1 100644
--- a/test/put-test.js
+++ b/test/put-test.js
@@ -26,6 +26,15 @@ vows
           assert.equal(res.a, "b");
         },
       },
+      "returns true": {
+        topic: (function () {
+          var res = dotty.put({}, ["a"], "b");
+          return res;
+        })(),
+        "should set the correct value": function (res) {
+          assert.equal(res, true);
+        },
+      },
     },
     "A two-level path": {
       "as a string": {
diff --git a/test/security-test.js b/test/security-test.js
index 10a1670..f8a8936 100644
--- a/test/security-test.js
+++ b/test/security-test.js
@@ -1,4 +1,4 @@
-var dotty = require("../lib/index"),
+const dotty = require("../lib/index"),
   vows = require("vows"),
   assert = require("assert");
 
@@ -7,17 +7,40 @@ vows
   .addBatch({
     "When we attempt to update the prototype": {
       topic() {
-        var obj = {};
+        const obj = {};
         dotty.put(obj, "__proto__.polluted", "Muhahahaha");
         return obj;
       },
       "it should not update": function (res) {
         assert.equal(res.polluted, undefined);
+        assert.equal(Object.prototype.polluted, undefined);
+      },
+    },
+    "When we attempt to update the prototype using an array": {
+      topic() {
+        const obj = {};
+        dotty.put(obj, ["__proto__", "polluted"], "Muhahahaha");
+        return obj;
+      },
+      "it should not update": function (res) {
+        assert.equal(res.polluted, undefined);
+        assert.equal(Object.prototype.polluted, undefined);
+      },
+    },
+    "When we attempt to update the prototype using a non-string": {
+      topic() {
+        const obj = {};
+        dotty.put(obj, [["__proto__"], "polluted"], "Muhahahaha");
+        return obj;
+      },
+      "it should not update": function (res) {
+        assert.equal(res.polluted, undefined);
+        assert.equal(Object.prototype.polluted, undefined);
       },
     },
     "When we attempt to update the constructor prototype": {
       topic() {
-        var obj = {};
+        const obj = {};
         dotty.put(obj, "constructor.prototype.polluted", "Muhahahaha");
         return obj;
       },
