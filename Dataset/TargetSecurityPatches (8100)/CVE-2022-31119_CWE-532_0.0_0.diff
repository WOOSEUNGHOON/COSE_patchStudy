ab9ade57fbc1f465ffe905248f93f328d638d7e5
nextcloud@@mail@@pull@@6488
diff --git a/lib/Controller/AccountsController.php b/lib/Controller/AccountsController.php
index 4ab70b4cf5..be33c47a25 100644
--- a/lib/Controller/AccountsController.php
+++ b/lib/Controller/AccountsController.php
@@ -336,7 +336,6 @@ public function destroy(int $id): JSONResponse {
 	 * @param bool $autoDetect
 	 *
 	 * @return JSONResponse
-	 * @throws ClientException
 	 */
 	public function create(string $accountName, string $emailAddress, string $password = null, string $imapHost = null, int $imapPort = null, string $imapSslMode = null, string $imapUser = null, string $imapPassword = null, string $smtpHost = null, int $smtpPort = null, string $smtpSslMode = null, string $smtpUser = null, string $smtpPassword = null, bool $autoDetect = true): JSONResponse {
 		try {
@@ -346,15 +345,15 @@ public function create(string $accountName, string $emailAddress, string $passwo
 				$account = $this->setup->createNewAccount($accountName, $emailAddress, $imapHost, $imapPort, $imapSslMode, $imapUser, $imapPassword, $smtpHost, $smtpPort, $smtpSslMode, $smtpUser, $smtpPassword, $this->currentUserId);
 			}
 		} catch (CouldNotConnectException $e) {
-			$this->logger->info('Creating account failed: ' . $e->getMessage(), [
-				'exception' => $e,
-			]);
-			return \OCA\Mail\Http\JsonResponse::fail([
+			$data = [
 				'error' => $e->getReason(),
 				'service' => $e->getService(),
 				'host' => $e->getHost(),
 				'port' => $e->getPort(),
-			]);
+			];
+
+			$this->logger->info('Creating account failed: ' . $e->getMessage(), $data);
+			return \OCA\Mail\Http\JsonResponse::fail($data);
 		} catch (ServiceException $e) {
 			$this->logger->error('Creating account failed: ' . $e->getMessage(), [
 				'exception' => $e,
