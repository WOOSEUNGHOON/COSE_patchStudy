bda81084c0401234b168437cf35a63390e3064d1
gocd@@gocd@@pull@@9829
diff --git a/spark/spark-base/src/main/java/com/thoughtworks/go/spark/HtmlErrorPage.java b/spark/spark-base/src/main/java/com/thoughtworks/go/spark/HtmlErrorPage.java
index 4dcc57f46eb..08e46d73538 100644
--- a/spark/spark-base/src/main/java/com/thoughtworks/go/spark/HtmlErrorPage.java
+++ b/spark/spark-base/src/main/java/com/thoughtworks/go/spark/HtmlErrorPage.java
@@ -16,6 +16,7 @@
 package com.thoughtworks.go.spark;
 
 import org.apache.commons.io.IOUtils;
+import org.apache.commons.text.StringEscapeUtils;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -27,7 +28,7 @@ public abstract class HtmlErrorPage {
 
     public static String errorPage(int code, String message) {
         return Holder.INSTANCE.replaceAll(buildRegex("status_code"), valueOf(code))
-                .replaceAll(buildRegex("error_message"), message);
+                .replaceAll(buildRegex("error_message"), StringEscapeUtils.escapeHtml4(message));
     }
 
     private static String buildRegex(final String value) {
diff --git a/spark/spark-base/src/test/java/com/thoughtworks/go/spark/HtmlErrorPageTest.java b/spark/spark-base/src/test/java/com/thoughtworks/go/spark/HtmlErrorPageTest.java
new file mode 100644
index 00000000000..5e381c14e73
--- /dev/null
+++ b/spark/spark-base/src/test/java/com/thoughtworks/go/spark/HtmlErrorPageTest.java
@@ -0,0 +1,40 @@
+/*
+ * Copyright 2021 ThoughtWorks, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.thoughtworks.go.spark;
+
+import org.junit.jupiter.api.Test;
+
+import static com.thoughtworks.go.spark.HtmlErrorPage.errorPage;
+import static org.assertj.core.api.Assertions.assertThat;
+
+class HtmlErrorPageTest {
+
+    @Test
+    public void shouldReplaceStatusCodeAndMessage() {
+        assertThat(errorPage(404, "Error message"))
+                .contains("404")
+                .contains("Error message");
+    }
+
+    @Test
+    public void shouldEscapeHtmlInMessages() {
+        String htmlInMessage = "";
+        assertThat(errorPage(404, htmlInMessage))
+                .doesNotContain(htmlInMessage)
+                .contains("<img src="blah"/>");
+    }
+}
\ No newline at end of file
