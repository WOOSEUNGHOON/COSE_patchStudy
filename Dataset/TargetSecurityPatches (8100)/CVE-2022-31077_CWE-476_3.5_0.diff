5d60ae9eabd6b6b7afe38758e19bbe8137664701
kubeedge@@kubeedge@@pull@@3899
diff --git a/cloud/pkg/cloudhub/servers/udsserver/server.go b/cloud/pkg/cloudhub/servers/udsserver/server.go
index c1ad643919..5afa4a973f 100644
--- a/cloud/pkg/cloudhub/servers/udsserver/server.go
+++ b/cloud/pkg/cloudhub/servers/udsserver/server.go
@@ -50,17 +50,15 @@ func StartServer(address string) {
 
 // ExtractMessage extracts message from clients
 func ExtractMessage(context string) (*model.Message, error) {
+	var msg model.Message
 	if context == "" {
-		return nil, errors.New("failed with error: context is empty")
+		return &msg, errors.New("failed with error: context is empty")
 	}
-
-	var msg *model.Message
 	err := json.Unmarshal([]byte(context), &msg)
 	if err != nil {
-		return nil, err
+		return &msg, err
 	}
-
-	return msg, nil
+	return &msg, nil
 }
 
 // feedbackError sends back error message
diff --git a/cloud/pkg/csidriver/utils.go b/cloud/pkg/csidriver/utils.go
index 79cc8fafd4..a40edc170c 100644
--- a/cloud/pkg/csidriver/utils.go
+++ b/cloud/pkg/csidriver/utils.go
@@ -167,7 +167,7 @@ func sendToKubeEdge(context, kubeEdgeEndpoint string) (string, error) {
 
 // extractMessage extracts message
 func extractMessage(context string) (*model.Message, error) {
-	var msg *model.Message
+	var msg model.Message
 	if context == "" {
 		err := errors.New("failed to extract message with empty context")
 		klog.Errorf("%v", err)
@@ -179,5 +179,5 @@ func extractMessage(context string) (*model.Message, error) {
 		return nil, err
 	}
 
-	return msg, nil
+	return &msg, nil
 }
diff --git a/edge/pkg/metamanager/client/node.go b/edge/pkg/metamanager/client/node.go
index b7239a164e..dc4d198709 100644
--- a/edge/pkg/metamanager/client/node.go
+++ b/edge/pkg/metamanager/client/node.go
@@ -85,19 +85,19 @@ func handleNodeFromMetaDB(content []byte) (*api.Node, error) {
 		return nil, fmt.Errorf("node length from meta db is %d", len(lists))
 	}
 
-	var node *api.Node
+	var node api.Node
 	err = json.Unmarshal([]byte(lists[0]), &node)
 	if err != nil {
 		return nil, fmt.Errorf("unmarshal message to node from db failed, err: %v", err)
 	}
-	return node, nil
+	return &node, nil
 }
 
 func handleNodeFromMetaManager(content []byte) (*api.Node, error) {
-	var node *api.Node
+	var node api.Node
 	err := json.Unmarshal(content, &node)
 	if err != nil {
 		return nil, fmt.Errorf("unmarshal message to node failed, err: %v", err)
 	}
-	return node, nil
+	return &node, nil
 }
diff --git a/edge/pkg/metamanager/client/persistentvolume.go b/edge/pkg/metamanager/client/persistentvolume.go
index a6f72ecdbe..954f18c682 100644
--- a/edge/pkg/metamanager/client/persistentvolume.go
+++ b/edge/pkg/metamanager/client/persistentvolume.go
@@ -89,10 +89,10 @@ func handlePersistentVolumeFromMetaDB(content []byte) (*api.PersistentVolume, er
 }
 
 func handlePersistentVolumeFromMetaManager(content []byte) (*api.PersistentVolume, error) {
-	var pv *api.PersistentVolume
+	var pv api.PersistentVolume
 	err := json.Unmarshal(content, &pv)
 	if err != nil {
 		return nil, fmt.Errorf("unmarshal message to persistentvolume failed, err: %v", err)
 	}
-	return pv, nil
+	return &pv, nil
 }
diff --git a/edge/pkg/metamanager/client/persistentvolumeclaim.go b/edge/pkg/metamanager/client/persistentvolumeclaim.go
index 3fce570b91..d9fb3ce6aa 100644
--- a/edge/pkg/metamanager/client/persistentvolumeclaim.go
+++ b/edge/pkg/metamanager/client/persistentvolumeclaim.go
@@ -80,19 +80,19 @@ func handlePersistentVolumeClaimFromMetaDB(content []byte) (*api.PersistentVolum
 		return nil, fmt.Errorf("persistentvolumeclaim length from meta db is %d", len(lists))
 	}
 
-	var pvc *api.PersistentVolumeClaim
+	var pvc api.PersistentVolumeClaim
 	err = json.Unmarshal([]byte(lists[0]), &pvc)
 	if err != nil {
 		return nil, fmt.Errorf("unmarshal message to persistentvolumeclaim from db failed, err: %v", err)
 	}
-	return pvc, nil
+	return &pvc, nil
 }
 
 func handlePersistentVolumeClaimFromMetaManager(content []byte) (*api.PersistentVolumeClaim, error) {
-	var pvc *api.PersistentVolumeClaim
+	var pvc api.PersistentVolumeClaim
 	err := json.Unmarshal(content, &pvc)
 	if err != nil {
 		return nil, fmt.Errorf("unmarshal message to persistentvolumeclaim failed, err: %v", err)
 	}
-	return pvc, nil
+	return &pvc, nil
 }
diff --git a/edge/pkg/metamanager/client/volumeattachment.go b/edge/pkg/metamanager/client/volumeattachment.go
index f0f895f45b..a080da40ba 100644
--- a/edge/pkg/metamanager/client/volumeattachment.go
+++ b/edge/pkg/metamanager/client/volumeattachment.go
@@ -92,19 +92,19 @@ func handleVolumeAttachmentFromMetaDB(content []byte) (*api.VolumeAttachment, er
 		return nil, fmt.Errorf("volumeattachment length from meta db is %d", len(lists))
 	}
 
-	var va *api.VolumeAttachment
+	var va api.VolumeAttachment
 	err = json.Unmarshal([]byte(lists[0]), &va)
 	if err != nil {
 		return nil, fmt.Errorf("unmarshal message to volumeattachment from db failed, err: %v", err)
 	}
-	return va, nil
+	return &va, nil
 }
 
 func handleVolumeAttachmentFromMetaManager(content []byte) (*api.VolumeAttachment, error) {
-	var va *api.VolumeAttachment
+	var va api.VolumeAttachment
 	err := json.Unmarshal(content, &va)
 	if err != nil {
 		return nil, fmt.Errorf("unmarshal message to volumeattachment failed, err: %v", err)
 	}
-	return va, nil
+	return &va, nil
 }
