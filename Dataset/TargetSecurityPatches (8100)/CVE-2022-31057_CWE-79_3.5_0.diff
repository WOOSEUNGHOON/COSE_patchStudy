3e025a0a3e123f4108082645b1ced6fb548f7b6f
shopware@@shopware
diff --git a/composer.json b/composer.json
index 111400e856..1a93dbbd3e 100644
--- a/composer.json
+++ b/composer.json
@@ -84,13 +84,16 @@
         "symfony/serializer": "~5.4.0",
         "symfony/validator": "~4.4.34",
         "symfony/web-link": "~4.4.27",
+        "voku/anti-xss": "~4.1.39",
         "wikimedia/less.php": "3.1.0"
     },
     "replace": {
         "paragonie/random_compat": "*",
         "symfony/polyfill-ctype": "*",
         "symfony/polyfill-php72": "*",
-        "symfony/polyfill-php73": "*"
+        "symfony/polyfill-php73": "*",
+        "symfony/polyfill-iconv": "*",
+        "symfony/polyfill-mbstring": "*"
     },
     "suggest": {
         "ext-apcu": "*",
diff --git a/composer.lock b/composer.lock
index c91936db8a..387b1a14e2 100644
--- a/composer.lock
+++ b/composer.lock
@@ -4,7 +4,7 @@
         "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
         "This file is @generated automatically"
     ],
-    "content-hash": "04af69417e3a2d261d9f0c8ea6c5854c",
+    "content-hash": "aa9e7479e5376871d41275c10dffa31c",
     "packages": [
         {
             "name": "aws/aws-crt-php",
@@ -5883,89 +5883,6 @@
             ],
             "time": "2022-05-24T11:49:31+00:00"
         },
-        {
-            "name": "symfony/polyfill-mbstring",
-            "version": "v1.26.0",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/symfony/polyfill-mbstring.git",
-                "reference": "9344f9cb97f3b19424af1a21a3b0e75b0a7d8d7e"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-mbstring/zipball/9344f9cb97f3b19424af1a21a3b0e75b0a7d8d7e",
-                "reference": "9344f9cb97f3b19424af1a21a3b0e75b0a7d8d7e",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=7.1"
-            },
-            "provide": {
-                "ext-mbstring": "*"
-            },
-            "suggest": {
-                "ext-mbstring": "For best performance"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-main": "1.26-dev"
-                },
-                "thanks": {
-                    "name": "symfony/polyfill",
-                    "url": "https://github.com/symfony/polyfill"
-                }
-            },
-            "autoload": {
-                "files": [
-                    "bootstrap.php"
-                ],
-                "psr-4": {
-                    "Symfony\\Polyfill\\Mbstring\\": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Nicolas Grekas",
-                    "email": "p@tchwork.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
-                }
-            ],
-            "description": "Symfony polyfill for the Mbstring extension",
-            "homepage": "https://symfony.com",
-            "keywords": [
-                "compatibility",
-                "mbstring",
-                "polyfill",
-                "portable",
-                "shim"
-            ],
-            "support": {
-                "source": "https://github.com/symfony/polyfill-mbstring/tree/v1.26.0"
-            },
-            "funding": [
-                {
-                    "url": "https://symfony.com/sponsor",
-                    "type": "custom"
-                },
-                {
-                    "url": "https://github.com/fabpot",
-                    "type": "github"
-                },
-                {
-                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
-                    "type": "tidelift"
-                }
-            ],
-            "time": "2022-05-24T11:49:31+00:00"
-        },
         {
             "name": "symfony/polyfill-php80",
             "version": "v1.26.0",
@@ -7069,6 +6986,262 @@
             ],
             "time": "2022-01-02T09:41:36+00:00"
         },
+        {
+            "name": "voku/anti-xss",
+            "version": "4.1.39",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/voku/anti-xss.git",
+                "reference": "64a59ba4744e6722866ff3440d93561da9e85cd0"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/voku/anti-xss/zipball/64a59ba4744e6722866ff3440d93561da9e85cd0",
+                "reference": "64a59ba4744e6722866ff3440d93561da9e85cd0",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.0.0",
+                "voku/portable-utf8": "~6.0.2"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "~6.0 || ~7.0 || ~9.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "4.1.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "voku\\helper\\": "src/voku/helper/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "EllisLab Dev Team",
+                    "homepage": "http://ellislab.com/"
+                },
+                {
+                    "name": "Lars Moelleken",
+                    "email": "lars@moelleken.org",
+                    "homepage": "https://www.moelleken.org/"
+                }
+            ],
+            "description": "anti xss-library",
+            "homepage": "https://github.com/voku/anti-xss",
+            "keywords": [
+                "anti-xss",
+                "clean",
+                "security",
+                "xss"
+            ],
+            "support": {
+                "issues": "https://github.com/voku/anti-xss/issues",
+                "source": "https://github.com/voku/anti-xss/tree/4.1.39"
+            },
+            "funding": [
+                {
+                    "url": "https://www.paypal.me/moelleken",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/voku",
+                    "type": "github"
+                },
+                {
+                    "url": "https://opencollective.com/anti-xss",
+                    "type": "open_collective"
+                },
+                {
+                    "url": "https://www.patreon.com/voku",
+                    "type": "patreon"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/voku/anti-xss",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-08T17:03:58+00:00"
+        },
+        {
+            "name": "voku/portable-ascii",
+            "version": "2.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/voku/portable-ascii.git",
+                "reference": "b56450eed252f6801410d810c8e1727224ae0743"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/voku/portable-ascii/zipball/b56450eed252f6801410d810c8e1727224ae0743",
+                "reference": "b56450eed252f6801410d810c8e1727224ae0743",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.0.0"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "~6.0 || ~7.0 || ~9.0"
+            },
+            "suggest": {
+                "ext-intl": "Use Intl for transliterator_transliterate() support"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "voku\\": "src/voku/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Lars Moelleken",
+                    "homepage": "http://www.moelleken.org/"
+                }
+            ],
+            "description": "Portable ASCII library - performance optimized (ascii) string functions for php.",
+            "homepage": "https://github.com/voku/portable-ascii",
+            "keywords": [
+                "ascii",
+                "clean",
+                "php"
+            ],
+            "support": {
+                "issues": "https://github.com/voku/portable-ascii/issues",
+                "source": "https://github.com/voku/portable-ascii/tree/2.0.1"
+            },
+            "funding": [
+                {
+                    "url": "https://www.paypal.me/moelleken",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/voku",
+                    "type": "github"
+                },
+                {
+                    "url": "https://opencollective.com/portable-ascii",
+                    "type": "open_collective"
+                },
+                {
+                    "url": "https://www.patreon.com/voku",
+                    "type": "patreon"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/voku/portable-ascii",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-08T17:03:00+00:00"
+        },
+        {
+            "name": "voku/portable-utf8",
+            "version": "6.0.4",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/voku/portable-utf8.git",
+                "reference": "f6c78e492520115bb2d947c3a0d90a2c6b7a60a8"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/voku/portable-utf8/zipball/f6c78e492520115bb2d947c3a0d90a2c6b7a60a8",
+                "reference": "f6c78e492520115bb2d947c3a0d90a2c6b7a60a8",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.0.0",
+                "symfony/polyfill-iconv": "~1.0",
+                "symfony/polyfill-intl-grapheme": "~1.0",
+                "symfony/polyfill-intl-normalizer": "~1.0",
+                "symfony/polyfill-mbstring": "~1.0",
+                "symfony/polyfill-php72": "~1.0",
+                "voku/portable-ascii": "~2.0.0"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "~6.0 || ~7.0 || ~9.0"
+            },
+            "suggest": {
+                "ext-ctype": "Use Ctype for e.g. hexadecimal digit detection",
+                "ext-fileinfo": "Use Fileinfo for better binary file detection",
+                "ext-iconv": "Use iconv for best performance",
+                "ext-intl": "Use Intl for best performance",
+                "ext-json": "Use JSON for string detection",
+                "ext-mbstring": "Use Mbstring for best performance"
+            },
+            "type": "library",
+            "autoload": {
+                "files": [
+                    "bootstrap.php"
+                ],
+                "psr-4": {
+                    "voku\\": "src/voku/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "(Apache-2.0 or GPL-2.0)"
+            ],
+            "authors": [
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Hamid Sarfraz",
+                    "homepage": "http://pageconfig.com/"
+                },
+                {
+                    "name": "Lars Moelleken",
+                    "homepage": "http://www.moelleken.org/"
+                }
+            ],
+            "description": "Portable UTF-8 library - performance optimized (unicode) string functions for php.",
+            "homepage": "https://github.com/voku/portable-utf8",
+            "keywords": [
+                "UTF",
+                "clean",
+                "php",
+                "unicode",
+                "utf-8",
+                "utf8"
+            ],
+            "support": {
+                "issues": "https://github.com/voku/portable-utf8/issues",
+                "source": "https://github.com/voku/portable-utf8/tree/6.0.4"
+            },
+            "funding": [
+                {
+                    "url": "https://www.paypal.me/moelleken",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/voku",
+                    "type": "github"
+                },
+                {
+                    "url": "https://opencollective.com/portable-utf8",
+                    "type": "open_collective"
+                },
+                {
+                    "url": "https://www.patreon.com/voku",
+                    "type": "patreon"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/voku/portable-utf8",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-08T17:04:59+00:00"
+        },
         {
             "name": "wikimedia/less.php",
             "version": "v3.1.0",
diff --git a/engine/Shopware/Plugins/Default/Frontend/InputFilter/Bootstrap.php b/engine/Shopware/Plugins/Default/Frontend/InputFilter/Bootstrap.php
index 272e34acee..3fdebfd84f 100644
--- a/engine/Shopware/Plugins/Default/Frontend/InputFilter/Bootstrap.php
+++ b/engine/Shopware/Plugins/Default/Frontend/InputFilter/Bootstrap.php
@@ -22,11 +22,16 @@
  * our trademarks remain entirely with us.
  */
 
+use voku\helper\AntiXSS;
+
 /**
  * Shopware InputFilter Plugin
  */
 class Shopware_Plugins_Frontend_InputFilter_Bootstrap extends Shopware_Components_Plugin_Bootstrap
 {
+    public const ALLOWED_ATTRIBUTES_KEY = 'allowedAttributes';
+    public const ALLOWED_HTML_TAGS_KEY = 'allowedHtmlTags';
+
     /**
      * @var string
      */
@@ -37,6 +42,50 @@ class Shopware_Plugins_Frontend_InputFilter_Bootstrap extends Shopware_Component
      */
     public $xssRegex = 'javascript:|src\s*=|\bon[a-z]+\s*=|style\s*=|\bdata-\w+(?!\.)\b\s?=?';
 
+    /**
+     * @var array>
+     */
+    public array $stripTagsWhiteList = [
+        'frontend/account/login' => [
+            'password',
+        ],
+        'frontend/account/savepassword' => [
+            'password',
+            'passwordConfirmation',
+            'currentPassword',
+        ],
+        'frontend/register/ajax_validate_email' => [
+            'password',
+        ],
+        'frontend/register/ajax_validate_password' => [
+            'password',
+        ],
+        'frontend/register/saveregister' => [
+            'password',
+        ],
+        'frontend/account/resetpassword' => [
+            'password',
+            'passwordConfirmation',
+        ],
+        'frontend/account/saveemail' => [
+            'currentPassword',
+        ],
+    ];
+
+    /**
+     * @var array>>>
+     *
+     * usage:
+     *
+     * 'frontend/account/login' => [
+     *      'password' => [
+     *           self::ALLOWED_ATTRIBUTES_KEY => [],
+     *           self::ALLOWED_HTML_TAGS_KEY => []
+     *       ]
+     *   ]
+     */
+    public array $allowanceList = [];
+
     /**
      * @var string
      */
@@ -102,10 +151,6 @@ public function onRouteShutdown(Enlight_Controller_EventArgs $args)
             $regex[] = $config->own_filter;
         }
 
-        if (empty($regex)) {
-            return;
-        }
-
         $regex = '#' . implode('|', $regex) . '#msi';
 
         $userParams = $request->getUserParams();
@@ -113,33 +158,6 @@ public function onRouteShutdown(Enlight_Controller_EventArgs $args)
             &$_GET, &$_POST, &$_COOKIE, &$_REQUEST, &$_SERVER, &$userParams,
         ];
 
-        $whiteList = [
-            'frontend/account/login' => [
-                'password',
-            ],
-            'frontend/account/savepassword' => [
-                'password',
-                'passwordConfirmation',
-                'currentPassword',
-            ],
-            'frontend/register/ajax_validate_email' => [
-                'password',
-            ],
-            'frontend/register/ajax_validate_password' => [
-                'password',
-            ],
-            'frontend/register/saveregister' => [
-                'password',
-            ],
-            'frontend/account/resetpassword' => [
-                'password',
-                'passwordConfirmation',
-            ],
-            'frontend/account/saveemail' => [
-                'currentPassword',
-            ],
-        ];
-
         $route = strtolower(
             implode(
                 '/',
@@ -147,14 +165,17 @@ public function onRouteShutdown(Enlight_Controller_EventArgs $args)
             )
         );
 
-        $whiteList = \array_key_exists($route, $whiteList) ? $whiteList[$route] : [];
+        $stripTagsWhiteList = \array_key_exists($route, $this->stripTagsWhiteList) ? $this->stripTagsWhiteList[$route] : [];
+        $allowanceList = \array_key_exists($route, $this->allowanceList) ? $this->allowanceList[$route] : [];
         foreach ($process as $key => $val) {
             foreach ($val as $k => $v) {
                 unset($process[$key][$k]);
-                $stripTags = \in_array($k, $whiteList) ? false : $stripTagsConf;
+                $stripTags = \in_array($k, $stripTagsWhiteList) ? false : $stripTagsConf;
+                $allowedHtmlTags = \array_key_exists($k, $allowanceList) ? $allowanceList[$k][self::ALLOWED_HTML_TAGS_KEY] : [];
+                $allowedAttributes = \array_key_exists($k, $allowanceList) ? $allowanceList[$k][self::ALLOWED_ATTRIBUTES_KEY] : [];
 
                 if (\is_string($k)) {
-                    $filteredKey = self::filterValue($k, $regex, $stripTags);
+                    $filteredKey = self::filterValue($k, $regex, $stripTags, $allowedHtmlTags, $allowedAttributes);
                 } else {
                     $filteredKey = $k;
                 }
@@ -164,12 +185,12 @@ public function onRouteShutdown(Enlight_Controller_EventArgs $args)
                 }
 
                 if (\is_array($v)) {
-                    $process[$key][$filteredKey] = self::filterArrayValue($v, $regex, $stripTags);
+                    $process[$key][$filteredKey] = self::filterArrayValue($v, $regex, $stripTags, $allowedHtmlTags, $allowedAttributes);
                     continue;
                 }
 
                 if (\is_string($v)) {
-                    $process[$key][$filteredKey] = self::filterValue($v, $regex, $stripTags);
+                    $process[$key][$filteredKey] = self::filterValue($v, $regex, $stripTags, $allowedHtmlTags, $allowedAttributes);
                     continue;
                 }
 
@@ -188,13 +209,15 @@ public function onRouteShutdown(Enlight_Controller_EventArgs $args)
     /**
      * Filter value by regex
      *
-     * @param string $value
-     * @param string $regex
-     * @param bool   $stripTags
+     * @param string        $value
+     * @param string        $regex
+     * @param bool          $stripTags
+     * @param array $allowedHtmlTags
+     * @param array $allowedAttributes
      *
      * @return string|null
      */
-    public static function filterValue($value, $regex, $stripTags = true)
+    public static function filterValue($value, $regex, $stripTags = true, array $allowedHtmlTags = [], array $allowedAttributes = [])
     {
         if (empty($value)) {
             return $value;
@@ -208,22 +231,29 @@ public static function filterValue($value, $regex, $stripTags = true)
             return null;
         }
 
-        return $value;
+        $antiXss = new AntiXSS();
+        $antiXss->removeEvilAttributes($allowedHtmlTags);
+        $antiXss->removeEvilHtmlTags($allowedAttributes);
+        $value = $antiXss->xss_clean($value);
+
+        return \str_replace(['<', '>'], ['<', '>'], $value);
     }
 
     /**
      * @param array $value
+     * @param array            $allowedHtmlTags
+     * @param array            $allowedAttributes
      *
      * @return array|null
      */
-    public static function filterArrayValue(array $value, string $regex, bool $stripTags = true): ?array
+    public static function filterArrayValue(array $value, string $regex, bool $stripTags = true, array $allowedHtmlTags = [], array $allowedAttributes = []): ?array
     {
         $newReturn = [];
         foreach ($value as $valueKey => $valueValue) {
             if (\is_int($valueKey)) {
                 $filteredKey = $valueKey;
             } else {
-                $filteredKey = self::filterValue($valueKey, $regex, $stripTags);
+                $filteredKey = self::filterValue($valueKey, $regex, $stripTags, $allowedHtmlTags, $allowedAttributes);
             }
 
             if ($filteredKey === '' || $filteredKey === null) {
@@ -237,7 +267,7 @@ public static function filterArrayValue(array $value, string $regex, bool $strip
             }
 
             if (\is_string($valueValue)) {
-                $filteredValue = self::filterValue($valueValue, $regex, $stripTags);
+                $filteredValue = self::filterValue($valueValue, $regex, $stripTags, $allowedHtmlTags, $allowedAttributes);
             }
 
             $newReturn[$filteredKey] = $filteredValue;
diff --git a/tests/Unit/Plugin/Frontend/InputFilter/FilterTest.php b/tests/Unit/Plugin/Frontend/InputFilter/FilterTest.php
index 3e833b021d..705c17c1de 100644
--- a/tests/Unit/Plugin/Frontend/InputFilter/FilterTest.php
+++ b/tests/Unit/Plugin/Frontend/InputFilter/FilterTest.php
@@ -147,6 +147,21 @@ public function testXssFilter(string $input, ?string $expected): void
         );
     }
 
+    /**
+     * @dataProvider stripAntiXssDataProvider
+     *
+     * @param array $additions
+     */
+    public function testAntiXssFilter(string $input, ?string $expected, array $additions = []): void
+    {
+        $result = Shopware_Plugins_Frontend_InputFilter_Bootstrap::filterValue($input, '/(?!x)x/', ...$additions);
+
+        static::assertEquals(
+            $expected,
+            $result
+        );
+    }
+
     /**
      * @dataProvider stripxssArrayDataProvider
      *
@@ -233,6 +248,37 @@ public function stripxssDataProvider(): array
                 'input' => '',
                 'expected' => '',
             ],
+            [
+                'input' => '"%26%2362%26%2360img/src%26%2361x%20onerror%26%2361alert()%26%2362',
+                'expected' => '">',
+            ],
+        ];
+    }
+
+    /**
+     * @return array>
+     */
+    public function stripAntiXssDataProvider(): array
+    {
+        return [
+            [
+                'input' => '',
+                'expected' => '',
+                'additions' => [
+                    false,
+                    [],
+                    ['style'],
+                ],
+            ],
+            [
+                'input' => '',
+                'expected' => '',
+                'additions' => [
+                    false,
+                    ['iframe'],
+                    [],
+                ],
+            ],
         ];
     }
 
